TODO:
- [ ] list of questions
- [ ] lookup dataframe.util, maybe dataframe.filter
- [ ] analysis quality criteria

TODO NEXT:
- [ ] visuals
- [ ] excercise (whatis, util): check ta=tp, accounting identities
- [ ] financial coefficients library

MAYBE:
- [ ] example.py cleanup 
- [ ] make zip files and save to S3
- [ ] move sandbox repo to purgeable
- [ ] silence .loc warning
- [ ] more subsets, eg SME
- [ ] larger dummy example to load, 50 + 50 + 1000 example
- [ ] download() must fail on small fail on HTML file


NOT TODO:
- [ ] download() can show line count
- [ ] save dtypes as json, use them if available to speed up df import
- [ ] ask on SO - no connection and existing filename questions 


DONE:
- [x] extend whatis() functionto new coluns
- [x] revive xfailed tests - using temp directory in a fixture with pytest - has get_folder() failure
- [x] global pytest fixture for sample year 0
- [x] test_main.py
- [x] smaller messages.py
- [x] port existing tests fro `sandbox`
- [x] variable descriptions boo.whatis
- [x] boo vs . in backage
- [x] pip install boo
- [x] okved v2
- [x] autopep8

17:03 28.07.2019 - из sandbox

# 0. Альтернативные решения для парсинга 

Сейчас мы загружаем исходный файл, преобразовываем отдельные колонки
на "чистом" питоне, приводим все строки к тысячам рублей и сохраняем 
получившийся файл.

Также можно: 

- использовать  `csvkit` для работы с файлами, например <https://csvkit.readthedocs.io/en/1.0.3/scripts/csvcut.html>
- складывать в базу данных (чистый SQL, `dataset`, `SQLAlchemy`)
- парсить блоками через `pandas`


# 1. WONTFIX

Что мы сейчас не делаем:

- [ ] склеить данные по компаниям за несколько лет
- [ ] более интеллектуальный поиск ошибок в данных
- [ ] управление местом расположения каталога `data`
- [ ] глобальный `pip install boo` 
- [ ] kernel для kaggle
- [ ] проверка размера скачанного файла, риск обрыва данных (`curl -C -`)
- [ ] убивать повторы данных 

# 2. TODO / DONE

Текущие задачи:

## Разное

- [ ] вывести названия колонок исходного файла 
- [ ] записывать данные по типам dtypes
- [ ] сделать интерфейс доступа к данным в R
- [ ] описание псевдокода алгоритма `boo`

## Можно делать в notebook

- [ ] выгрузить данные для Excel
- [ ] демонстрационный пример и тест с проверкой свойств отчтености


## Документация 

- [x] настроен sphinx 
- [ ] sphinx по публичным функциям boo
- [x] дописываем инструкции в readme
- [x] названия переменных и счетов бухучета в виде справочной функции 
- [х] размер и количество строк в файлах по годам (вставить в README.md)

## Переменные

- [x] названия переменных с цифрами в readme
- [ ] названия переменных - идентификаторов в readme
- [x] добавление новых переменных в `boo.account.variables.DEFAULT_LOOKUP_DICT`
  
## Пакет

- [x] частичное скачивание по размеру kB 
- [x] тесты Travis CI + coverage 
- [x] сквознные тесты с условным данными `sample`
- [x] более чиcтый вариант логгера (tqdm)
- [x] локальный `pip install boo`
- [x] управление проектом через `invoke`